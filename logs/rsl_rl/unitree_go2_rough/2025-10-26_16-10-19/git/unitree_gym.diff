--- git status ---
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/terrains/extreme_traverse/config/__pycache__/traverse.cpython-311.pyc
	modified:   source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/__pycache__/velocity_env_cfg.cpython-311.pyc
	modified:   source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/config/quadruped/unitree_go2/__pycache__/traverse_env_cfg.cpython-311.pyc
	modified:   source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/config/quadruped/unitree_go2/traverse_env_cfg.py
	modified:   source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/mdp/__pycache__/events.cpython-311.pyc
	modified:   source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/mdp/events.py
	modified:   source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/velocity_env_cfg.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	logs/rsl_rl/unitree_go2_rough/2025-10-26_16-07-17/
	logs/rsl_rl/unitree_go2_rough/2025-10-26_16-10-19/
	outputs/2025-10-26/

no changes added to commit (use "git add" and/or "git commit -a") 


--- git diff ---
diff --git a/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/terrains/extreme_traverse/config/__pycache__/traverse.cpython-311.pyc b/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/terrains/extreme_traverse/config/__pycache__/traverse.cpython-311.pyc
index 4b1c8e5..bbf1199 100644
Binary files a/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/terrains/extreme_traverse/config/__pycache__/traverse.cpython-311.pyc and b/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/terrains/extreme_traverse/config/__pycache__/traverse.cpython-311.pyc differ
diff --git a/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/__pycache__/velocity_env_cfg.cpython-311.pyc b/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/__pycache__/velocity_env_cfg.cpython-311.pyc
index d5eca14..afa7ca3 100644
Binary files a/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/__pycache__/velocity_env_cfg.cpython-311.pyc and b/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/__pycache__/velocity_env_cfg.cpython-311.pyc differ
diff --git a/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/config/quadruped/unitree_go2/__pycache__/traverse_env_cfg.cpython-311.pyc b/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/config/quadruped/unitree_go2/__pycache__/traverse_env_cfg.cpython-311.pyc
index dc28b3d..01608db 100644
Binary files a/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/config/quadruped/unitree_go2/__pycache__/traverse_env_cfg.cpython-311.pyc and b/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/config/quadruped/unitree_go2/__pycache__/traverse_env_cfg.cpython-311.pyc differ
diff --git a/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/config/quadruped/unitree_go2/traverse_env_cfg.py b/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/config/quadruped/unitree_go2/traverse_env_cfg.py
index 660f6ca..f93bc01 100644
--- a/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/config/quadruped/unitree_go2/traverse_env_cfg.py
+++ b/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/config/quadruped/unitree_go2/traverse_env_cfg.py
@@ -53,24 +53,26 @@ class UnitreeGo2TraverseEnvCfg(LocomotionVelocityGo2EnvCfg):
         self.actions.joint_pos.joint_names = self.joint_names
 
         # ------------------------------Events------------------------------
-        self.events.randomize_reset_base.params = {
-            "pose_range": {
-                "x": (2.0, 3.0),
-                "y": (-0.0, 0.0),
-                "z": (0.0, 0.2),
-                "roll": (-0.31, 0.31),
-                "pitch": (-0.31, 0.31),
-                "yaw": (-3.14, 3.14),
-            },
-            "velocity_range": {
-                "x": (-0.5, 0.5),
-                "y": (-0.5, 0.5),
-                "z": (-0.5, 0.5),
-                "roll": (-0.5, 0.5),
-                "pitch": (-0.5, 0.5),
-                "yaw": (-0.5, 0.5),
-            },
-        }
+        self.events.reset_root_state.params = {"margin": -0.6}
+        
+        # self.events.randomize_reset_base.params = {
+        #     "pose_range": {
+        #         "x": (2.0, 3.0),
+        #         "y": (-0.0, 0.0),
+        #         "z": (0.0, 0.2),
+        #         "roll": (-0.31, 0.31),
+        #         "pitch": (-0.31, 0.31),
+        #         "yaw": (-3.14, 3.14),
+        #     },
+        #     "velocity_range": {
+        #         "x": (-0.5, 0.5),
+        #         "y": (-0.5, 0.5),
+        #         "z": (-0.5, 0.5),
+        #         "roll": (-0.5, 0.5),
+        #         "pitch": (-0.5, 0.5),
+        #         "yaw": (-0.5, 0.5),
+        #     },
+        # }
         self.events.randomize_rigid_body_mass_base.params["asset_cfg"].body_names = [self.base_link_name]
         self.events.randomize_rigid_body_mass_others.params["asset_cfg"].body_names = [self.foot_link_name]
         self.events.randomize_com_positions.params["asset_cfg"].body_names = [self.base_link_name]
diff --git a/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/mdp/__pycache__/events.cpython-311.pyc b/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/mdp/__pycache__/events.cpython-311.pyc
index a5ac017..3aff865 100644
Binary files a/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/mdp/__pycache__/events.cpython-311.pyc and b/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/mdp/__pycache__/events.cpython-311.pyc differ
diff --git a/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/mdp/events.py b/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/mdp/events.py
index 0cf923e..d4ced8f 100644
--- a/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/mdp/events.py
+++ b/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/mdp/events.py
@@ -199,52 +199,39 @@ def _randomize_prop_by_op(
     return data
 
 
-# def spawn_walls(env, env_ids: torch.Tensor | None, gap_y=0.8, ahead_x=1.0, wall_size=(5.0, 0.2, 1.5), z=0.75):
-#     """
-#     在场景中生成两面“平行墙”。支持 per-env 版本（如果拿得到 env_origins），
-#     拿不到时至少生成全局的两面墙，确保可见。
-#     """
-#     print("[EVENT] spawn_walls: start")
-
-#     # resolve environment ids
-#     if env_ids is None:
-#         env_ids = torch.arange(env.scene.num_envs, device="cpu")
-#     else:
-#         env_ids = env_ids.cpu()
-
-#     wall = sim_utils.CuboidCfg(
-#         size=wall_size,
-#         rigid_props=sim_utils.RigidBodyPropertiesCfg(kinematic_enabled=True),
-#         collision_props=sim_utils.CollisionPropertiesCfg(),
-#         visual_material=sim_utils.PreviewSurfaceCfg(diffuse_color=(0.9, 0.1, 0.1)),
-#     )
-
-#     scene = env.scene
-
-#     # 1) 全局兜底（一定能在 Stage 看到）：
-#     wall.func("/World/WallsTest/Wall1", wall, translation=(ahead_x,  gap_y, z))
-#     wall.func("/World/WallsTest/Wall2", wall, translation=(ahead_x, -gap_y, z))
-#     print("[EVENT] spawn_walls: spawned /World/WallsTest/Wall1,2")
-
-#     # 2) 每个并行 env 一对墙（若拿得到 env 原点）
-#     origins = getattr(scene, "env_origins", None) or getattr(getattr(scene, "terrain", None), "env_origins", None)
-#     if origins is not None:
-#         try:
-#             n = len(origins)
-#         except Exception:
-#             n = int(origins.shape[0])
-#         for i, o in enumerate(origins):
-#             ox, oy, oz = float(o[0]), float(o[1]), float(o[2])
-#             wall.func(f"/World/envs/env_{i}/Walls/Wall1", wall, translation=(ox + ahead_x, oy + gap_y, oz + z))
-#             wall.func(f"/World/envs/env_{i}/Walls/Wall2", wall, translation=(ox + ahead_x, oy - gap_y, oz + z))
-#         print(f"[EVENT] spawn_walls: spawned per-env walls for {n} envs")
-#     else:
-#         print("[EVENT] spawn_walls: WARNING env_origins not found; skip per-env walls")
-
-#     # 如需传感器能“看到”墙（可选）：
-#     hs = getattr(scene, "height_scanner", None)
-#     hsb = getattr(scene, "height_scanner_base", None)
-#     if hs is not None:
-#         hs.mesh_prim_paths = list(set(list(hs.mesh_prim_paths) + ["/World/WallsTest"]))
-#     if hsb is not None:
-#         hsb.mesh_prim_paths = list(set(list(hsb.mesh_prim_paths) + ["/World/WallsTest"]))
\ No newline at end of file
+def reset_root_state(
+    env: ManagerBasedEnv,
+    env_ids: torch.Tensor,
+    asset_cfg: SceneEntityCfg = SceneEntityCfg("robot"),
+    margin: float = -0.6,     # 距离入口前移的距离（米）
+):
+    asset: Articulation = env.scene[asset_cfg.name]
+    gen_cfg = env.scene.terrain.cfg.terrain_generator
+    # 你的“两面墙”子地形 cfg，里头有 corridor_start_x / platform_height 等
+    sub_cfg = gen_cfg.sub_terrains["two_walls"]   # 如果你用 sub_terrains 字典，请按键名取
+
+    root_states = asset.data.default_root_state[env_ids].clone()   # (N, 13)
+    origins = env.scene.env_origins[env_ids].clone()               # (N, 3)
+
+    # 入口前 margin 米（务必保证 margin < corridor_start_x，避免刷进墙体）
+    start_x_local = float(sub_cfg.corridor_start_x) - float(margin)
+
+    # 放置到“各自 tile 的入口前”
+    pos = root_states[:, 0:3]
+    pos[:, 0] = origins[:, 0] + start_x_local          # x：入口前
+    pos[:, 1] = origins[:, 1] + 0.0                    # y：走廊中线
+    # z：略高于平台，避免脚底穿插；也可直接用默认 root_states 的 z
+    platform_h = float(getattr(sub_cfg, "platform_height", 0.0))
+    pos[:, 2] = torch.maximum(
+        pos[:, 2],
+        torch.tensor(platform_h + 0.02, device=env.device)
+    )
+
+    # 朝向：默认保持原来的朝向（root_states[:,3:7]）。若需要固定面向 +x，可自行设定 yaw→quat
+    quat = root_states[:, 3:7]
+
+    # 写入仿真
+    asset.write_root_pose_to_sim(torch.cat([pos, quat], dim=-1), env_ids=env_ids)
+    # 速度清零（避免初始抖动）
+    lin_ang_zero = torch.zeros_like(root_states[:, 7:13])
+    asset.write_root_velocity_to_sim(lin_ang_zero, env_ids=env_ids)
\ No newline at end of file
diff --git a/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/velocity_env_cfg.py b/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/velocity_env_cfg.py
index 0ca0e58..140912f 100644
--- a/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/velocity_env_cfg.py
+++ b/source/unitree_gym/unitree_gym/tasks/manager_based/locomotion/velocity/velocity_env_cfg.py
@@ -350,6 +350,15 @@ class EventCfg:
         },
     )
 
+    reset_root_state = EventTerm(
+        func=mdp.reset_root_state,
+        mode="reset",
+        params={
+            "asset_cfg": SceneEntityCfg("robot"),  # 哪个资产
+            "margin": -0.6,                         # 距离墙入口前移 0.6 米
+        }
+    )
+
     randomize_reset_base = EventTerm(
         func=mdp.reset_root_state_uniform,
         mode="reset",